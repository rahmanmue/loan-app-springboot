package com.enigmacamp.loanapp.service.impl;

import com.enigmacamp.loanapp.model.entity.InstalmentType;
import com.enigmacamp.loanapp.model.entity.Role;
import com.enigmacamp.loanapp.repository.InstalmentTypeRepository;
import com.enigmacamp.loanapp.service.InstalmentTypeService;
import com.enigmacamp.loanapp.utils.constant.EInstalmentType;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;

import java.util.List;
import java.util.Optional;

@Service
public class InstalmentTypeImpl implements InstalmentTypeService {

    @Autowired
    InstalmentTypeRepository instalmentTypeRepository;

    @Override
    public InstalmentType saveInstalmentType(InstalmentType instalmentType) {
        return instalmentTypeRepository.save(instalmentType);
    }

    @Override
    public InstalmentType updateInstalmentType(InstalmentType instalmentType) {
        if(instalmentTypeRepository.findById(instalmentType.getId()).isPresent()){
            return instalmentTypeRepository.save(instalmentType);
        }else{
            throw new RuntimeException("Instalment type with id "+ instalmentType.getId()+" Not Found");
        }

    }

    @Override
    public List<InstalmentType> getAllInstalmentTypes() {
        return instalmentTypeRepository.findAll();
    }

    @Override
    public Optional<InstalmentType> getInstalmentTypeById(String id) {
        return instalmentTypeRepository.findById(id);
    }

    @Override
    public void deleteInstalmentType(String id) {
         instalmentTypeRepository.deleteById(id);
    }
}






































































































































































































































































































































































































































































































































